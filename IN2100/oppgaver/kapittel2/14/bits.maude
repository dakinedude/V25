fmod BITS is
    sorts Bit Bits .

    ops 0 1 : -> Bit [ctor] .
    op nil : -> Bits [ctor] .
    op __ : Bits Bit -> Bits [ctor prec 30] .

    vars b b' : Bit .
    vars B B' : Bits .

    op neg : Bits -> Bits .
    eq neg(nil) = nil .
    eq neg(B 1) = neg(B) 0 .
    eq neg(B 0) = neg(B) 1 .

    op insert : Bit Bits -> Bits .
    eq insert(b, nil) = nil b .
    eq insert(b, B b') = insert(b, B) b' .

    op _+_ : Bits Bits -> Bits [prec 37] .
    eq nil + nil = nil .
    eq B b + nil = B b + nil 0 .
    eq nil + B b = nil 0 + B b .
    eq B 1 + B' 0 = (B + B') 1 .
    eq B 0 + B' 1 = (B + B') 1 .
    eq B 0 + B' 0 = (B + B') 0 .
    eq B 1 + B' 1 = ((B + nil 1) + B') 0 .
endfm


    
