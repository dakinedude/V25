set include BOOL off .

fmod BOOLEAN is
    sort Boolean .
    ops true false : -> Boolean [ctor] .
    op not_ : Boolean -> Boolean [prec 53] .
    op _and_ : Boolean Boolean -> Boolean [prec 55] .
    op _or_ : Boolean Boolean -> Boolean [prec 59] .

    var B : Boolean .
    eq not false = true .
    eq not true = false .
    eq true and B = B .
    eq false and B = false .
    eq false or B = B .
    eq true or B = true .
endfm

fmod BOOLEAN1 is
    protecting BOOLEAN .

    op _implies_ : Boolean Boolean -> Boolean [prec 61] .
    op if_then_else_fi : Boolean Boolean Boolean -> Boolean .

    vars P Q R : Boolean .

    eq P implies Q = not P or Q .
    ceq if_then_else_fi(P, Q, R) = Q if P = true .
    ceq if_then_else_fi(P, Q, R) = R if P = false .
endfm 
